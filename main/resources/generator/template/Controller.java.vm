package ${package}.controller;

import java.util.List;
import java.util.Map;
import xin.cymall.common.enumresource.StateEnum;
import xin.cymall.common.log.SysLog;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.stereotype.Controller;
import javax.servlet.http.HttpServletRequest;

import ${package}.entity.${className};
import ${package}.service.${className}Service;
import ${package}.common.utils.PageUtils;
import ${package}.common.utils.Query;
import ${package}.common.utils.R;


/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Controller
@RequestMapping("${pathName}")
public class ${className}Controller {
	@Autowired
	private ${className}Service ${classname}Service;
	
    /**
     * 跳转到列表页
     */
    @RequestMapping("/list")
    @RequiresPermissions("${pathName}:list")
    public String list() {
        return "${pathName}/list";
    }
    
	/**
	 * 列表数据
	 */
    @ResponseBody
	@RequestMapping("/listData")
	@RequiresPermissions("${pathName}:list")
	public R listData(@RequestParam Map<String, Object> params){
		//查询列表数据
        Query query = new Query(params);

		List<${className}> ${classname}List = ${classname}Service.getList(query);
		int total = ${classname}Service.getCount(query);
		
		PageUtils pageUtil = new PageUtils(${classname}List, total, query.getLimit(), query.getPage());
		
		return R.ok().put("page", pageUtil);
	}

    /**
     * 跳转到新增页面
     **/
    @RequestMapping("/add")
    @RequiresPermissions("${pathName}:save")
    public String add(){
        return "${pathName}/add";
    }

    /**
     *   跳转到修改页面
     **/
    @RequestMapping("/edit/{id}")
    @RequiresPermissions("${pathName}:update")
    public String edit(Model model, @PathVariable("id") String id){
		${className} ${classname} = ${classname}Service.get(id);
        model.addAttribute("model",${classname});
        return "${pathName}/edit";
    }

	/**
	 * 信息
	 */
    @ResponseBody
    @RequestMapping("/info/{${pk.attrname}}")
    @RequiresPermissions("${pathName}:info")
    public R info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
        ${className} ${classname} = ${classname}Service.get(${pk.attrname});
        return R.ok().put("${classname}", ${classname});
    }

    /**
	 * 保存
	 */
    @ResponseBody
    @SysLog("保存${comments}")
	@RequestMapping("/save")
	@RequiresPermissions("${pathName}:save")
	public R save(@RequestBody ${className} ${classname}){
		${classname}Service.save(${classname});
		
		return R.ok();
	}
	
	/**
	 * 修改
	 */
    @ResponseBody
    @SysLog("修改${comments}")
	@RequestMapping("/update")
	@RequiresPermissions("${pathName}:update")
	public R update(@RequestBody ${className} ${classname}){
		${classname}Service.update(${classname});
		
		return R.ok();
	}

    /**
     * 启用
     */
    @ResponseBody
    @SysLog("启用${comments}")
    @RequestMapping("/enable")
    @RequiresPermissions("${pathName}:update")
    public R enable(@RequestBody String[] ids){
        String stateValue=StateEnum.ENABLE.getCode();
		${classname}Service.updateState(ids,stateValue);
        return R.ok();
    }
    /**
     * 禁用
     */
    @ResponseBody
    @SysLog("禁用${comments}")
    @RequestMapping("/limit")
    @RequiresPermissions("${pathName}:update")
    public R limit(@RequestBody String[] ids){
        String stateValue=StateEnum.LIMIT.getCode();
		${classname}Service.updateState(ids,stateValue);
        return R.ok();
    }
	
	/**
	 * 删除
	 */
    @ResponseBody
    @SysLog("删除${comments}")
	@RequestMapping("/delete")
	@RequiresPermissions("${pathName}:delete")
	public R delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
		${classname}Service.deleteBatch(${pk.attrname}s);
		
		return R.ok();
	}
	
}
